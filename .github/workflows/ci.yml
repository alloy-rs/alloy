name: CI

on:
  push:
    branches: [main]
  pull_request:

env:
  CARGO_TERM_COLOR: always

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  test:
    name: test ${{ matrix.rust }} ${{ matrix.flags }}
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        rust: ["stable", "nightly", "1.76"] # MSRV
        flags: ["--no-default-features", "", "--all-features"]
        exclude:
          # Some features have higher MSRV.
          - rust: "1.76" # MSRV
            flags: "--all-features"
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
      - name: Install Anvil
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly
      - name: Install test binaries
        shell: bash
        run: ./.github/scripts/install_test_binaries.sh
      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
      # Only run tests on latest stable and above
      - name: Install cargo-nextest
        if: ${{ matrix.rust != '1.76' }} # MSRV
        uses: taiki-e/install-action@nextest
      - name: build
        if: ${{ matrix.rust == '1.76' }} # MSRV
        run: cargo build --workspace ${{ matrix.flags }}
      - name: test
        if: ${{ matrix.rust != '1.76' }} # MSRV
        run: cargo nextest run --workspace ${{ matrix.flags }}

  doctest:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
      - run: cargo test --workspace --doc
      - run: cargo test --all-features --workspace --doc

  wasm-unknown:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
        with:
          target: wasm32-unknown-unknown
      - uses: taiki-e/install-action@cargo-hack
      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
      - name: cargo hack
        run: |
          cargo hack build --workspace --target wasm32-unknown-unknown \
            --exclude alloy-contract \
            --exclude alloy-internal-test-utils \
            --exclude alloy-network \
            --exclude alloy-node-bindings \
            --exclude alloy-provider \
            --exclude alloy-signer \
            --exclude alloy-signer-aws \
            --exclude alloy-signer-gcp \
            --exclude alloy-signer-ledger \
            --exclude alloy-signer-trezor \
            --exclude alloy-signer-wallet \
            --exclude alloy-transport-ipc

  wasm-wasi:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
        with:
          target: wasm32-wasi
      - uses: taiki-e/install-action@cargo-hack
      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
      - name: cargo hack
        run: |
          cargo hack build --workspace --target wasm32-wasi \
            --exclude alloy-signer-gcp \
            --exclude alloy-signer-ledger \
            --exclude alloy-signer-trezor \
            --exclude alloy-transport-ipc
      # Ledger signer requires one of `browser` or `node` features.
      - name: build ledger
        run: cargo build -p alloy-signer-ledger --features browser --target wasm32-wasi

  feature-checks:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
      - uses: taiki-e/install-action@cargo-hack
      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
      - name: cargo hack
        run: cargo hack check --feature-powerset --depth 1

  clippy:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          components: clippy
      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
      - run: cargo +stable clippy --workspace --all-targets --all-features
        env:
          RUSTFLAGS: -Dwarnings

  docs:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@nightly
      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
      - run: cargo doc --workspace --all-features --no-deps --document-private-items
        env:
          RUSTDOCFLAGS:
            --cfg docsrs -D warnings --show-type-layout --generate-link-to-definition
            --enable-index-page -Zunstable-options
      - name: Deploy documentation
        uses: peaceiris/actions-gh-pages@v3
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: target/doc
          force_orphan: true

  fmt:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@nightly
        with:
          components: rustfmt
      - run: cargo fmt --all --check
