name: CI

permissions: {}

on:
  push:
    branches: [main]
  pull_request:

env:
  CARGO_TERM_COLOR: always

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  test:
    name: test ${{ matrix.os }} ${{ matrix.rust }} ${{ matrix.flags }}
    timeout-minutes: 30
    permissions:
      contents: read
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest", "windows-latest"]
        rust:
          - "stable"
          - "nightly"
          - "1.86" # MSRV
        flags:
          # No features
          - "--no-default-features -F reqwest-rustls-tls"
          # Default features
          - ""
          # All features
          - "--all-features"
        exclude:
          # All features on MSRV
          - rust: "1.85" # MSRV
            flags: "--all-features"
    steps:
      - uses: actions/checkout@v5
        with:
          persist-credentials: false
      - uses: dtolnay/rust-toolchain@e97e2d8cc328f1b50210efc529dca0028893a2d9 # master
        with:
          toolchain: ${{ matrix.rust }}
      - name: Install Anvil
        uses: foundry-rs/foundry-toolchain@82dee4ba654bd2146511f85f0d013af94670c4de # v1
        with:
          version: nightly
      - name: Install test binaries
        shell: bash
        run: ./.github/scripts/install_test_binaries.sh
      - uses: Swatinem/rust-cache@f13886b937689c021905a6b90929199931d60db1 # v2
        with:
          cache-on-failure: true
      # Only run tests on latest stable and above
      - name: Install cargo-nextest
        if: ${{ matrix.rust != '1.86' }} # MSRV
        uses: taiki-e/install-action@d6912b47771be2c443ec90dbb3d28e023987e782 # v2
        with:
          tool: nextest
      - name: build
        if: ${{ matrix.rust == '1.86' }} # MSRV
        run: cargo build --workspace ${{ matrix.flags }}
      - name: test
        shell: bash
        if: ${{ matrix.rust != '1.86' }} # MSRV
        run: cargo nextest run --workspace ${{ matrix.flags }}

  doctest:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v5
        with:
          persist-credentials: false
      - uses: dtolnay/rust-toolchain@e97e2d8cc328f1b50210efc529dca0028893a2d9 # master
        with:
          toolchain: stable
      - uses: Swatinem/rust-cache@f13886b937689c021905a6b90929199931d60db1 # v2
        with:
          cache-on-failure: true
      - run: cargo test --workspace --doc
      - run: cargo test --all-features --workspace --doc

  wasm-unknown:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v5
        with:
          persist-credentials: false
      - uses: dtolnay/rust-toolchain@e97e2d8cc328f1b50210efc529dca0028893a2d9 # master
        with:
          toolchain: stable
          target: wasm32-unknown-unknown
      - uses: taiki-e/install-action@d6912b47771be2c443ec90dbb3d28e023987e782 # v2
        with:
          tool: cargo-hack
      - uses: Swatinem/rust-cache@f13886b937689c021905a6b90929199931d60db1 # v2
        with:
          cache-on-failure: true
      - name: cargo hack
        run: |
          cargo hack build --workspace --ignore-unknown-features --features ws --target wasm32-unknown-unknown \
            --exclude alloy \
            --exclude alloy-contract \
            --exclude alloy-network \
            --exclude alloy-node-bindings \
            --exclude alloy-provider \
            --exclude alloy-signer \
            --exclude alloy-signer-aws \
            --exclude alloy-signer-gcp \
            --exclude alloy-signer-ledger \
            --exclude alloy-signer-local \
            --exclude alloy-signer-trezor \
            --exclude alloy-transport-ipc

  wasm-wasi:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v5
        with:
          persist-credentials: false
      - uses: dtolnay/rust-toolchain@e97e2d8cc328f1b50210efc529dca0028893a2d9 # master
        with:
          toolchain: stable
          target: wasm32-wasip1
      - uses: taiki-e/install-action@d6912b47771be2c443ec90dbb3d28e023987e782 # v2
        with:
          tool: cargo-hack
      - uses: Swatinem/rust-cache@f13886b937689c021905a6b90929199931d60db1 # v2
        with:
          cache-on-failure: true
      - name: cargo hack
        run: |
          cargo hack build --workspace --target wasm32-wasip1 \
            --exclude alloy-signer-gcp \
            --exclude alloy-signer-ledger \
            --exclude alloy-signer-trezor \
            --exclude alloy-transport-ipc
      # Ledger signer requires one of `browser` or `node` features.
      - name: build ledger
        run: cargo build -p alloy-signer-ledger --features browser --target wasm32-wasip1

  feature-checks:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v5
        with:
          persist-credentials: false
      - uses: dtolnay/rust-toolchain@e97e2d8cc328f1b50210efc529dca0028893a2d9 # master
        with:
          toolchain: stable
      - uses: taiki-e/install-action@d6912b47771be2c443ec90dbb3d28e023987e782 # v2
        with:
          tool: cargo-hack
      - uses: Swatinem/rust-cache@f13886b937689c021905a6b90929199931d60db1 # v2
        with:
          cache-on-failure: true
      - name: cargo hack
        run: cargo hack check --feature-powerset --depth 1

  check-no-std:
    name: check no_std ${{ matrix.features }}
    runs-on: ubuntu-latest
    timeout-minutes: 30
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v5
        with:
          persist-credentials: false
      - uses: dtolnay/rust-toolchain@e97e2d8cc328f1b50210efc529dca0028893a2d9 # master
        with:
          toolchain: stable
          targets: riscv32imac-unknown-none-elf
      - uses: taiki-e/install-action@d6912b47771be2c443ec90dbb3d28e023987e782 # v2
        with:
          tool: cargo-hack
      - uses: Swatinem/rust-cache@f13886b937689c021905a6b90929199931d60db1 # v2
        with:
          cache-on-failure: true
      - run: ./scripts/check_no_std.sh

  typos:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v5
        with:
          persist-credentials: false
      - uses: crate-ci/typos@85f62a8a84f939ae994ab3763f01a0296d61a7ee # v1

  clippy:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v5
        with:
          persist-credentials: false
      - uses: dtolnay/rust-toolchain@e97e2d8cc328f1b50210efc529dca0028893a2d9 # master
        with:
          toolchain: stable
          components: clippy
      - uses: Swatinem/rust-cache@f13886b937689c021905a6b90929199931d60db1 # v2
        with:
          cache-on-failure: true
      - run: cargo +stable clippy --workspace --all-targets --all-features
        env:
          RUSTFLAGS: -Dwarnings

  docs:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v5
        with:
          persist-credentials: false
      - uses: dtolnay/rust-toolchain@e97e2d8cc328f1b50210efc529dca0028893a2d9 # master
        with:
          toolchain: nightly
      - uses: Swatinem/rust-cache@f13886b937689c021905a6b90929199931d60db1 # v2
        with:
          cache-on-failure: true
      - name: Build documentation
        run: cargo doc --workspace --all-features --no-deps --document-private-items
        env:
          RUSTDOCFLAGS: --cfg docsrs -D warnings -Zunstable-options --show-type-layout --generate-link-to-definition

  fmt:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v5
        with:
          persist-credentials: false
      - uses: dtolnay/rust-toolchain@e97e2d8cc328f1b50210efc529dca0028893a2d9 # master
        with:
          toolchain: nightly
          components: rustfmt
      - run: cargo fmt --all --check

  # Check crates correctly propagate features
  feature-propagation:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v5
        with:
          persist-credentials: false
      - name: run zepter
        run: |
          cargo install zepter -f --locked
          zepter --version
          time zepter run check

  deny:
    uses: ithacaxyz/ci/.github/workflows/deny.yml@9c8d0dc20e7ad02455d3fdab2378a05f29907630 # main
    permissions:
      contents: read

  codeql:
    name: Analyze (${{ matrix.language }})
    runs-on: ubuntu-latest
    timeout-minutes: 30
    permissions:
      contents: read
      security-events: write
      actions: read
    strategy:
      fail-fast: false
      matrix:
        include:
          - language: actions
            build-mode: none
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          persist-credentials: false
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
          build-mode: ${{ matrix.build-mode }}
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:${{matrix.language}}"

  ci-success:
    name: ci success
    runs-on: ubuntu-latest
    if: always()
    needs:
      - test
      - doctest
      - wasm-unknown
      - wasm-wasi
      - feature-checks
      - check-no-std
      - typos
      - clippy
      - docs
      - fmt
      - deny
      - codeql
    steps:
      - name: Decide whether the needed jobs succeeded or failed
        uses: re-actors/alls-green@05ac9388f0aebcb5727afa17fcccfecd6f8ec5fe # release/v1
        with:
          jobs: ${{ toJSON(needs) }}
