[package]
name = "alloy-rpc-types-engine"
description = "Ethereum execution-consensus layer (engine) API RPC types"

version.workspace = true
edition.workspace = true
rust-version.workspace = true
license.workspace = true
homepage.workspace = true
authors.workspace = true
repository.workspace = true
exclude.workspace = true

[dependencies]
# ethereum
alloy-rlp = { workspace = true, features = ["derive"] }
alloy-primitives = { workspace = true, features = ["rlp", "serde"] }
alloy-consensus.workspace = true
alloy-rpc-types.workspace = true
alloy-serde.workspace = true

# ssz
ethereum_ssz_derive = { workspace = true, optional = true }
ethereum_ssz = { workspace = true, optional = true }

serde = { workspace = true, features = ["derive"] }
thiserror = { workspace = true, optional = true }

# jsonrpsee
jsonrpsee-types = { version = "0.22", optional = true }
alloy-eips = { workspace= true, optional = true }

[features]
std = ["alloy-consensus/std", "alloy-rlp/arrayvec", "dep:thiserror"]
jsonrpsee-types = ["std", "dep:jsonrpsee-types"]
ssz = ["std", "dep:ethereum_ssz", "dep:ethereum_ssz_derive", "alloy-primitives/ssz", "alloy-rpc-types/ssz", "dep:alloy-eips", "alloy-eips/ssz"]
kzg = ["alloy-consensus/kzg"]

[dev-dependencies]
alloy-primitives = { workspace = true, features = ["rand", "rlp", "serde", "arbitrary"] }

arbitrary = { workspace = true, features = ["derive"] }
rand.workspace = true
serde_json.workspace = true
similar-asserts.workspace = true
