[package]
name = "alloy-rpc-types"
description = "Alloy RPC types"

version.workspace = true
edition.workspace = true
rust-version.workspace = true
license.workspace = true
homepage.workspace = true
authors.workspace = true
repository.workspace = true
exclude.workspace = true

[dependencies]
# ethereum
alloy-rlp = { workspace = true, features = ["derive"] }
alloy-primitives = { workspace = true, features = ["rlp", "serde"] }
alloy-serde.workspace = true
alloy-genesis.workspace = true
alloy-consensus = { workspace = true, features = ["serde"] }
alloy-eips = { workspace = true, features = ["serde"] }

hashbrown = { version = "0.14", default-features = false, features = ["serde"] }
itertools.workspace = true
serde = { workspace = true, features = ["derive"] }
serde_json.workspace = true

# std
thiserror = { workspace = true, optional = true }

# arbitrary
arbitrary = { version = "1.3", features = ["derive"], optional = true }
proptest = { version = "1.4", optional = true }
proptest-derive = { version = "0.4", optional = true }

# jsonrpsee
jsonrpsee-types = { version = "0.22", optional = true }
alloy-sol-types.workspace = true

[features]
std = [
    "alloy-rlp/arrayvec",
    "alloy-primitives/std",
    "alloy-consensus/std",
    "alloy-eips/std",
    "dep:thiserror"
]
arbitrary = [
    "std",
    "dep:arbitrary",
    "dep:proptest-derive",
    "dep:proptest",
    "alloy-primitives/arbitrary",
    "alloy-eips/arbitrary",
]
jsonrpsee-types = ["std", "dep:jsonrpsee-types"]
ssz = ["std", "alloy-primitives/ssz", "alloy-eips/ssz"]
k256 = ["alloy-consensus/k256"]

[dev-dependencies]
alloy-primitives = { workspace = true, features = [
    "rand",
    "rlp",
    "serde",
    "arbitrary",
] }
alloy-consensus = { workspace = true, features = ["std", "arbitrary"] }

arbitrary = { workspace = true, features = ["derive"] }
proptest.workspace = true
proptest-derive.workspace = true
rand.workspace = true
similar-asserts.workspace = true
